@model BloggWebView.Models.UserView

@{
    ViewData["Title"] = "Register";
}

<h1>Register Yourself</h1>

<div class="row">
    <div class="col-md-4">
        <form asp-action="Registers" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Username" class="control-label"></label>
                <input asp-for="Username" class="form-control" type="email" required />
                <span asp-validation-for="Username" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PasswordHash" class="control-label"></label>
                <input asp-for="PasswordHash" class="form-control" type="password" required pattern="^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[^a-zA-Z\d\s]).{8,}$" title="Password must contain at least one lowercase letter, one uppercase letter, one digit, one special character, and be at least 8 characters long." />
                <span asp-validation-for="PasswordHash" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" required pattern="[a-zA-Z]+" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Phone" class="control-label"></label>
                <input asp-for="Phone" class="form-control" required pattern="[0-9]{10}" />
                <span asp-validation-for="Phone" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Login" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Already registered? Login</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
